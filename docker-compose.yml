version: '3.7'
services:
  redis:
    image: redis:7.2.0
    container_name: report-generator-redis
    restart: always
    command: >
      bash -c "
        mkdir /data/log -p &&
        mkdir /data/bases -p &&
        touch /data/log/redis-server.log &&
        redis-server /usr/local/etc/redis.conf | tee -a /data/log/redis-server.log
      "
    expose:
      - 6379
    volumes:
      - ./backend/files/redis.conf:/usr/local/etc/redis.conf
      - redis_volume:/data
      - ../../logs/redis/:/var/log/

  db:
    image: postgres:13.0-alpine
    restart: unless-stopped
    container_name: report-generator-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    expose:
      - 5432

  bot:
    build: .
    container_name: report-generator-bot
    depends_on:
      - redis
      - db
    restart: always
    volumes:
      - logs_value:/app/logs/
    entrypoint: python /app/manage.py bot
    env_file:
      - .env

  django:
    build: .
    container_name: report-generator-django
    depends_on:
      - redis
      - db
    restart: always
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
      - logs_value:/app/logs/
    entrypoint: gunicorn backend.wsgi --bind 0.0.0.0:8000
    env_file:
      - .env

  nginx:
    image: nginx:1.19-alpine
    container_name: report-generator-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/files/templates:/etc/nginx/templates
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - django
    env_file:
      - .env

  certbot:
    image: certbot/certbot
    container_name: report-generator-certbot
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
    env_file:
      - .env

volumes:
  static_value:
  media_value:
  redis_volume:
  postgres_data:
  logs_value:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
